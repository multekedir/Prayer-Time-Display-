
import java.awt.Color;
import static java.awt.SystemColor.window;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/*
 *This program is an add on the Pyhton Program, Prayer Time Display.
 *The Program gets user data to adjust iqama time. Is soters the 
 *collected the data in a file called iqama.txt wich wil be read by 
 *the python program. After saving the File it then executes runPython.sh 
 *to start the python program.
 *@version 1.55
 *@author Multezem Kedir
 */


/**
 * Creates the display for the program. 
 */
public class Display extends javax.swing.JFrame {

    Write write;
    ArrayList<String> inputList;
    String input;

    /**
     * Creates new form Display
     */
    public Display() {
        initComponents();

    }

    /**
     * Checks if a String is only letter.
     *
     * @param input String
     * @return True if it only letters
     */
    public boolean checkIfLetter(String input) {
        Pattern p = Pattern.compile("^[ A-z]+$");
        Matcher m = p.matcher(inFajir.getText());

        return m.matches();
    }

    /**
     * collects data into list
     *
     * @param input String to add
     */
    public void addToList(String input) {
        inputList.add(input); //apend data
        System.out.println(input + " added to List");
    }

    /**
     * Get what text JTextField we are working with and set it the text to Red.
     * Also shows pop-up error message"
     *
     * @param field
     * @param message "ERROR: "+ message + "\n Ex: (+number) or (HH:MM AM/PM) "
     */
    public void showError(JTextField field, String message) {
        JOptionPane error = new JOptionPane(); // create new error window
        error.showMessageDialog(this, "ERROR: " + message + "\n Ex: (+number) or (HH:MM AM/PM) ", "ERROR", JOptionPane.ERROR_MESSAGE);
        field.setForeground(Color.RED);// change the text field text to red
        System.out.println(field.getName() + "ERROR:" + message);
    }

    /**
     * Checks if entered data is correctly entered.
     *
     * @param field JTextField to check
     * @return
     */
    public boolean checkTextField(JTextField field) {
        input = field.getText().toLowerCase(); // convert to lower case
        System.out.println("input = " + input);
        if (input.length() > 0) { // check if field is emptey 
            if (input.charAt(0) == '+') { // check if starts with '+'
                try {
                    //can it be conveted to int
                    Integer.parseInt(input.substring(0));
                    addToList(input);
                    return true;
                } catch (NumberFormatException e) {
                    showError(field, "LETTER FOUND");
                    return false;
                }
            } else if (checkIfLetter(input)) {//check if there is only letters 
                showError(field, "ONLY LETTER FOUND");
                return false;
            } else if (input.contains(":")) {
                // check if am or pm are entered right
                if (input.contains("am") || input.contains("pm")) {
                    addToList(input);
                    return true;
                } else {
                    showError(field, "(AM / PM) NOT FOUND");
                    return false;
                }

            } else {
                showError(field, "ENTER DATA IN CORRECT FORMAT");
                return false;
            }
        } else {
            showError(field, "FIELD EMPTY");
            return false;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        fajir = new javax.swing.JLabel();
        inFajir = new javax.swing.JTextField();
        LDhur = new javax.swing.JLabel();
        inDhur = new javax.swing.JTextField();
        LAsr = new javax.swing.JLabel();
        inAsr = new javax.swing.JTextField();
        lAsr = new javax.swing.JLabel();
        inJuma = new javax.swing.JTextField();
        done = new javax.swing.JButton();
        inIsha = new javax.swing.JTextField();
        lIsha = new javax.swing.JLabel();
        lFajir = new javax.swing.JLabel();
        inMaghrib = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Adjust Iqama");
        setName("farme"); // NOI18N
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Adjust Iqama");

        fajir.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        fajir.setText("Fajir");

        inFajir.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        LDhur.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        LDhur.setText("Dhur");

        inDhur.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        inDhur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inDhurActionPerformed(evt);
            }
        });

        LAsr.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        LAsr.setText("Asr");

        inAsr.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        lAsr.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lAsr.setText("Juma");

        inJuma.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        inJuma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inJumaActionPerformed(evt);
            }
        });

        done.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        done.setText("Done");
        done.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneActionPerformed(evt);
            }
        });

        inIsha.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        inIsha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inIshaActionPerformed(evt);
            }
        });

        lIsha.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lIsha.setText("Isha");

        lFajir.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lFajir.setText("Maghrib ");

        inMaghrib.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        inMaghrib.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inMaghribActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(done)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(fajir)
                                    .addGap(18, 18, 18)
                                    .addComponent(inFajir, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(LDhur)
                                        .addComponent(LAsr))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(inAsr, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(inDhur, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGap(35, 35, 35)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lIsha)
                                        .addComponent(lAsr))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(inIsha, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(inJuma, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lFajir)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(inMaghrib, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lFajir)
                            .addComponent(inMaghrib, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lIsha)
                            .addComponent(inIsha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lAsr)
                            .addComponent(inJuma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fajir)
                            .addComponent(inFajir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LDhur)
                            .addComponent(inDhur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LAsr)
                            .addComponent(inAsr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(done)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inDhurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inDhurActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inDhurActionPerformed

    private void inJumaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inJumaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inJumaActionPerformed
    /**
     * When done is in action check if entered data is up to criteria
     *
     * @param evt
     */
    private void doneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneActionPerformed

        inputList = new ArrayList<>(); // creat new list
        if (checkTextField(inFajir)) {
            if (checkTextField(inDhur)) {
                if (checkTextField(inAsr)) {
                    if (checkTextField(inMaghrib)) {
                        if (checkTextField(inIsha)) {
                            if (checkTextField(inJuma)) {
                                write = new Write(inputList);   // initiate class Write 
								 dispose();
                            }
                        }
                    }
                }
            }
        }
       

    }//GEN-LAST:event_doneActionPerformed

    private void inIshaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inIshaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inIshaActionPerformed

    private void inMaghribActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inMaghribActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inMaghribActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Display().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LAsr;
    private javax.swing.JLabel LDhur;
    private javax.swing.JButton done;
    private javax.swing.JLabel fajir;
    private javax.swing.JTextField inAsr;
    private javax.swing.JTextField inDhur;
    private javax.swing.JTextField inFajir;
    private javax.swing.JTextField inIsha;
    private javax.swing.JTextField inJuma;
    private javax.swing.JTextField inMaghrib;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lAsr;
    private javax.swing.JLabel lFajir;
    private javax.swing.JLabel lIsha;
    // End of variables declaration//GEN-END:variables
}
